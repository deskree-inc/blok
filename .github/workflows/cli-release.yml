name: Release

on:
  release:
    types: [created]

jobs:
  verify-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for CLI changes
        id: check-cli
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^packages/cli/"; then
            echo "has_cli_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_cli_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        run: npm ci

      - name: Verify package version matches release
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          PACKAGE_VERSION=$(node -p "require('./packages/cli/package.json').version")
          if [ "v$PACKAGE_VERSION" != "$RELEASE_VERSION" ]; then
            echo "Package version ($PACKAGE_VERSION) does not match release version (${RELEASE_VERSION#v})"
            exit 1
          fi

      - name: Verify CHANGELOG.md update
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          if ! grep -q "${RELEASE_VERSION#v}" packages/cli/CHANGELOG.md; then
            echo "CHANGELOG.md does not contain an entry for version ${RELEASE_VERSION#v}"
            exit 1
          fi

      - name: Run tests
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        run: cd packages/cli && npm test

      - name: Build
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        run: cd packages/cli && npm run build

      - name: Publish to NPM
        if: steps.check-cli.outputs.has_cli_changes == 'true'
        run: cd packages/cli && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 